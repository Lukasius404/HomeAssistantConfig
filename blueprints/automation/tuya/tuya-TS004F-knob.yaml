blueprint:

  name: ZHA - Tuya - TS004F Rotating Knob - Custom Actions

  description: >-
    This automation adds triggers for all actions of the Tuya TS004F rotating knob remote.
    It provides simple custom actions for five basic commands:
    
    - Short press (press_type: 0)
    - Double press (press_type: 1)
    - Long press (press_type: 2)
    - Rotate left
    - Rotate right
    
    For each command type, you can define your own custom action to control any entity
    or perform any action in Home Assistant.
    
    NOTE: Debug logging is enabled by default to help identify command patterns.
    After everything is working properly, you can comment out the debug section.

    Sold on AliExpress by brands like Moes, Girier etc.

  domain: automation

  input:
    remote:
      name: Tuya - TS004F Rotating Knob
      description: Select the remote control you wish to use.
      selector:
        device:
          integration: zha
          manufacturer: _TZ3000_4fjiwweb
          model: TS004F
    press_short:
      name: Short Press
      description: Action to perform when button is pressed once
      selector:
        action:
      default: []
    press_double:
      name: Double Press
      description: Action to perform when button is double-pressed
      selector:
        action:
      default: []
    press_long:
      name: Long Press
      description: Action to perform when button is long-pressed
      selector:
        action:
      default: []
    rotate_left:
      name: Rotate Left
      description: Action to perform when rotating counter-clockwise (step down)
      selector:
        action:
      default: []
    rotate_right:
      name: Rotate Right
      description: Action to perform when rotating clockwise (step up)
      selector:
        action:
      default: []

mode: restart
max_exceeded: silent

trigger:
  - platform: event
    event_type: zha_event
    event_data:
      device_id: !input remote

action:
  - variables:
      command: "{{ trigger.event.data.command }}"
      cluster_id: "{{ trigger.event.data.cluster_id }}"
      endpoint_id: "{{ trigger.event.data.endpoint_id }}"
      args: "{{ trigger.event.data.args }}"
      direction: "{% if trigger.event.data.args[0] == 0 %} 0 {% elif trigger.event.data.args[0] == 1 %} 1 {% elif trigger.event.data.args[0] == 3 %} 3 {% endif %}"
  
  # Debug info - logs all events from the remote for debugging
  - service: system_log.write
    data:
      message: >-
        Knob Debug - Command: {{ command }}, 
        Cluster: {{ cluster_id }}, 
        Endpoint: {{ endpoint_id }}, 
        Args: {{ args }}
      level: info

  - choose:
    # Short Press
    - conditions:
        - "{{ command == 'toggle' or command == 'remote_button_short_press' or (command == 'press_type' and args.press_type == 0) }}"
      sequence: !input press_short

    # Double Press
    - conditions:
        - "{{ command == 'remote_button_double_press' or (command == 'press_type' and args.press_type == 1) }}"
      sequence: !input press_double

    # Long Press
    - conditions:
        - "{{ command == 'remote_button_long_press' or command == 'hold' or command == 'press_and_hold' or (command == 'press_type' and args.press_type == 2) }}"
      sequence: !input press_long

    # Rotate Left (Step Down)
    - conditions:
        - "{{ command == 'left' or command == 'move_to_level_with_on_off' or (command == 'step' and direction == 1) or (command == 'move' and direction == 1) }}"
      sequence: !input rotate_left

    # Rotate Right (Step Up)
    - conditions:
        - "{{ command == 'right' or command == 'move_to_level' or (command == 'step' and direction == 0) or (command == 'move' and direction == 0) }}"
      sequence: !input rotate_right